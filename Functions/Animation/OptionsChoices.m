function [AnatLandmark,Segment,seg_anim,bone_anim,mass_centers_anim,Global_mass_center_anim,Force_Prediction_points,muscles_anim,ellipsoid_anim,wrap_anim,mod_marker_anim,exp_marker_anim,external_forces_anim,external_forces_p,forceplate,BoS]=OptionsChoices(BiomechanicalModel,AnimateParameters)
% Extraction of choices for the animation
%
%   INPUT
%   - AnimateParameters : parameters of the animation, automatically
%   generated by the graphic interface 'GenerateAnimate'
%   - BiomechanicalModel :  complete model (see the Documentation for the
%   structure)
% Extraction of useful data for animation
%
%   INPUT
%   - AnimateParameters : parameters of the animation, automatically
%   generated by the graphic interface 'GenerateAnimate'
%
%   OUTPUT
%   - filename : nameof the used file
%   - DataXSens : binary number to know if we are using XSens Data
%   - q :  current coordinates of the model
%   - q6dof : current coordinates of the 6 dof joint
%   - Markers_set : markers set (see the Documentation for the structure);
%   - Muscles: muscles set (see the Documentation for the structure);
%   - real_markers : Position of markers in experimental data
%   - PelvisPosition : Position of the pelvis
%   - PelvisOrientation : Orientation of the pelvis
%    - EnableModel: for each body part, this variable evaluates the
%   possibility to add the associated model (used for the graphic
%   interface 'GenerateParameters').
%   - Human_model : osteo-articular model (see the Documentation for the structure)
%   - AnalysisParameters : parameters of the analysis
%   - InverseKinematicsResults :  results of inverse kinematics
%   - ExperimentalData : experimental data
%   - BiomechanicalModel : completer model (see the Documentation for the structure)
%________________________________________________________
%
% Licence
% Toolbox distributed under GPL 3.0 Licence
%________________________________________________________
%
% Authors : Antoine Muller, Charles Pontonnier, Pierre Puchaud and
% Georges Dumont
%________________________________________________________

%   OUTPUT
%________________________________________________________
%
% Licence
% Toolbox distributed under GPL 3.0 Licence
%________________________________________________________
%
% Authors : Antoine Muller, Charles Pontonnier, Pierre Puchaud and
% Georges Dumont
%________________________________________________________






if isfield(AnimateParameters, 'seg_anim')
    seg_anim = AnimateParameters.seg_anim;
else
    seg_anim = 0;
end
if isfield(AnimateParameters, 'bone_anim')
    bone_anim = AnimateParameters.bone_anim;
else
    bone_anim = 0;
end
if isfield(AnimateParameters, 'mass_centers_anim')
    mass_centers_anim = AnimateParameters.mass_centers_anim;
else
    mass_centers_anim = 0;
end
if isfield(AnimateParameters, 'Global_mass_center_anim')
    Global_mass_center_anim = AnimateParameters.Global_mass_center_anim;
else
    Global_mass_center_anim = 0;
end
if isfield(AnimateParameters, 'Force_Prediction_points')
    Force_Prediction_points = AnimateParameters.Force_Prediction_points;
else
    Force_Prediction_points = 0;
end
if isfield(AnimateParameters, 'muscles_anim')
    muscles_anim = AnimateParameters.muscles_anim;
else
    muscles_anim = 0;
end
% if isfield(AnimateParameters, 'ellipsoid')
%     ellipsoid_anim = AnimateParameters.ellipsoid;
% else
ellipsoid_anim = 0;
% end
if isfield(AnimateParameters, 'wrap')
    wrap_anim = AnimateParameters.wrap;
else
    wrap_anim = 0;
end
if isfield(AnimateParameters, 'mod_marker_anim')
    mod_marker_anim = AnimateParameters.mod_marker_anim;
else
    mod_marker_anim = 0;
end
if isfield(AnimateParameters, 'exp_marker_anim')
    exp_marker_anim = AnimateParameters.exp_marker_anim;
else
    exp_marker_anim = 0;
end
if isfield(AnimateParameters, 'external_forces_anim')
    external_forces_anim = AnimateParameters.external_forces_anim;
else
    external_forces_anim = 0;
end
if isfield(AnimateParameters, 'external_forces_pred')
    external_forces_p = AnimateParameters.external_forces_pred;
else
    external_forces_p = 0;
end
if isfield(AnimateParameters, 'forceplate')
    forceplate = AnimateParameters.forceplate;
else
    forceplate = 0;
end
if isfield(AnimateParameters, 'BoS')
    BoS = AnimateParameters.BoS;
else
    BoS = 0;
end
if isfield(AnimateParameters,'AnatLandmark')
    AnatLandmark=AnimateParameters.AnatLandmark;
else
    AnatLandmark=0;
end

if isfield(AnimateParameters,'Segment')
[~,Segment]=intersect({BiomechanicalModel.OsteoArticularModel.name},AnimateParameters.Segment);
else
    Segment=[];
end



end