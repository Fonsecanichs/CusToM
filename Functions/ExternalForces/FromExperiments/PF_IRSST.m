function [ExternalForcesComputationResults] = PF_IRSST(filename, BiomechanicalModel, AnalysisParameters)
% Computation of the external forces
%   From a c3d file, external forces are extracted, filtered and shaped
%   into an adapted structure
%
%   INPUT
%   - filename: name of the c3d file to process (character string)
%   - BiomechanicalModel: musculoskeletal model
%   - AnalysisParameters: parameters of the musculoskeletal analysis,
%   automatically generated by the graphic interface 'Analysis' 
%   OUTPUT
%   - ExternalForcesComputationResults: results of the external forces
%   computation (see the Documentation for the structure)
%________________________________________________________
%
% Licence
% Toolbox distributed under 3-Clause BSD License
%________________________________________________________
%
% Authors : Antoine Muller, Charles Pontonnier, Pierre Puchaud and
% Georges Dumont
%________________________________________________________  

Human_model = BiomechanicalModel.OsteoArticularModel;
load([filename '/ExperimentalData.mat']); %#ok<LOAD>
time = ExperimentalData.Time;
% Firstframe = ExperimentalData.FirstFrame;
% Lastframe = ExperimentalData.LastFrame;

nbframe=numel(time);
f_mocap=1/time(2);

% Initialisation
for f=1:nbframe
    for n=1:numel(Human_model)
        external_forces(f).fext(n).fext=zeros(3,2); %#ok<AGROW,*SAGROW>
    end
end

% Ajout des efforts
load([filename '.mat']); %#ok<LOAD>

% Resample
FRes = -resample(ExperimentalData.PF.FRes, f_mocap, 1000);
FRes = FRes(1:numel(time), :);
MRes = -resample(ExperimentalData.PF.MRes, f_mocap, 1000);
MRes = MRes(1:numel(time), :);
COP = resample(ExperimentalData.PF.COP, f_mocap, 1000);
COP = COP(1:numel(time), :);

% Filtrage
if AnalysisParameters.ExternalForces.FilterActive
    FRes = filt_data(FRes,AnalysisParameters.ExternalForces.FilterCutOff,f_mocap);
    MRes = filt_data(MRes,AnalysisParameters.ExternalForces.FilterCutOff,f_mocap);
end

Solid_name = 'RFoot'; 
Solid=find(strcmp({Human_model.name},Solid_name));
for i=1:numel(time)
    external_forces(i).fext(Solid).fext = [FRes(i,:)' MRes(i,:)']; %#ok<FNDSB>
    external_forces(i).Visual = [COP(i,:)'; FRes(i,:)'];
end

% Sauvegarde des données (data saving)
if exist([filename '/ExternalForcesComputationResults.mat'],'file')
    load([filename '/ExternalForcesComputationResults.mat']); %#ok<LOAD>
end
ExternalForcesComputationResults.ExternalForcesExperiments = external_forces;



end